@page "/mobylmenu"

@inject ApiService ApiService

<PageTitle>MobylMenu Metrics</PageTitle>

<div>
    @if (!isJames)
    {
        <div class="page-overlay">
            <div class="page-overlay-content">
                <h5 class="page-overlay-title">Are you James? <br />Enter the password</h5>
                <input type="password" id="password" class="input-field password-input" 
                       @bind="enteredPassword" 
                       placeholder="Enter Password" />
                <button type="submit" class="page-overlay-submit-button" @onclick="CheckPassword">Submit</button>
            </div>
        </div>
    }
    else
    {
        <!-- Main Metrics Content -->
        <h1 class="page-title">MobylMenu Metrics</h1>
        <p class="page-subtitle">Tracking MobylMenu activity.</p>
        <div class="page-body">
            <h3 class="page-body-title">Active User Metrics</h3>

            <div class="mm-active-users-container">
                <div class="mm-active-user-metric-container">
                    <h4 class="mm-active-user-metric-title">Daily Active Users</h4>
                    <span class="mm-active-user-metric-count">@dailyActiveUsers</span>
                </div>

                <div class="mm-active-user-metric-container">
                    <h4 class="mm-active-user-metric-title">Weekly Active Users</h4>
                    <span class="mm-active-user-metric-count">@weeklyActiveUsers</span>
                </div>

                <div class="mm-active-user-metric-container">
                    <h4 class="mm-active-user-metric-title">Monthly Active Users</h4>
                    <span class="mm-active-user-metric-count">@monthlyActiveUsers</span>
                </div>
            </div>
        </div>
    }
</div>

@code {
    // State management
    private bool isJames = false;

    // Password fields
    private string enteredPassword = string.Empty;
    private string correctPassword = "7evenCostanza";

    // User metrics
    private int dailyActiveUsers = 0;
    private int weeklyActiveUsers = 0;
    private int monthlyActiveUsers = 0;

    // Fetch data and check password
    protected override async Task OnInitializedAsync()
    {

        if (isJames)
        {
            await FetchUserMetrics();
        }
        else
        {
            Console.WriteLine("isJames is false. User metrics will not be fetched.");
        }
    }

    private async Task FetchUserMetrics()
    {

        try
        {
            var userMetrics = await ApiService.GetUserAnalyticsAsync();

            dailyActiveUsers = userMetrics.DailyActiveUsers;
            weeklyActiveUsers = userMetrics.WeeklyActiveUsers;
            monthlyActiveUsers = userMetrics.MonthlyActiveUsers;

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching user metrics: {ex.Message}");
        }
    }

    private async Task CheckPassword()
    {

        if (enteredPassword == correctPassword)
        {
            isJames = true;
            enteredPassword = string.Empty; // Clear the password field
            await FetchUserMetrics();
        }
        else
        {
            Console.WriteLine("Password is incorrect.");
        }
    }
}